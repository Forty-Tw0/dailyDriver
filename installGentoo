#!/bin/bash
echo "I would rather not execute this as is."
exit

# setup partions
echo "Setup partions with parted:
mklabel gpt
rm all
unit mib
mkpart primary 1 3
name 1 grub
set 1 bios_grub
mkpart primary 3 131
name 2 boot
set 2 boot on
mkpart primary 131 1024
name 3 swap
mkpart primary 1024 -1
name 4 gentoo
print"
parted -a optimal /dev/sdX
#emerge sys-fs/dosfstools
mkfs.fat -F32 /dev/sdX2
mkswap /dev/sdX3
swapon /dev/sdX3
mkfs.ext4 /dev/sdX4

# mount newly created partion
mount /dev/sdX4 /mnt/gentoo
cd /mnt/gentoo

# get and extract stage3
curl http://distfiles.gentoo.org/releases/amd64/autobuilds/$(curl -s http://distfiles.gentoo.org/releases/amd64/autobuilds/latest-stage3.txt | grep stage3-amd64-20 | awk '{print $1}') > stage3.tar.xz
tar xpf stage3.tar.xz --xattrs-include='*.*' --numeric-owner
rm stage3.tar.xz

# set some compiler flags
printf "CFLAGS=\"-march=native -O2 -pipe\"\nCXXFLAGS=\"\${CFLAGS}\"\nMAKEOPTS=\"-j5\"\n\nGRUB_PLATFORMS=\"efi-64 pc\"" > etc/portage/make.conf

# CloudFlare DNS
echo "nameserver 1.1.1.1" > etc/resolv.conf

####### Prep for chroot #######
mount --types proc /proc proc
mount --rbind /sys sys
mount --make-rslave sys
mount --rbind /dev dev
mount --make-rslave dev
###############################

chroot . /bin/bash
source /etc/profile
export PS1="(chroot) ${PS1}"

### We are now in chroot #################################################################

# mount /boot
mkdir /boot
mount /dev/sdX2 /boot

# sync ebuild repo
emerge --sync
emerge --oneshot portage
emerge --sync
emerge --update --deep --newuse @world
emerge --depclean

# timezone and locale
echo "Americ/Chicago" > /etc/timezone
printf "en_US ISO-8859-1\nen_US.UTF-8 UTF-8" > /etc/locale.gen
locale-gen
eselect locale set 5
env-update
source /etc/profile
export PS1="(chroot) $PS1"

# kernel config
curl -L https://github.com/feniksa/gentoo_ACS_override_patch/archive/master.zip -o tmp/master.zip
unzip tmp/master.zip -d tmp
mkdir etc/portage/patches
# ACS path to separate IOMMU groups
cp -r tmp/gentoo_ACS_override_patch-master/sys-kernel etc/portage/patches/sys-kernel
emerge sys-kernel/gentoo-sources
emerge sys-kernel/genkernel --autounmask-write
echo "option -3 for zz-autounmask"
etc-update
emerge sys-kernel/genkernel
sed -i 's/#GRUB_CMDLINE_LINUX=""/GRUB_CMDLINE_LINUX="video=efifb:off,vesafb:off iommu=on intel_iommu=on amd_iommu=on pcie_acs_override=downstream"/g' /etc/default/grub
genkernel --menuconfig all
# genkernel always uses a fresh config, so you have to reconfigure manually or Load the old one.

# auto-mmount USB
printf "UUID=$(lsblk -o name,uuid | grep sd[a-z]2 | awk '{print $2}') /boot vfat defaults 0 2\nUUID=$(lsblk -o name,uuid | grep sd[a-z]3 | awk '{print $2}') none swap sw 0 0\nUUID=$(lsblk -o name,uuid | grep sd[a-z]4 | awk '{print $2}') / ext4 noatime 0 1\n/dev/cdrom /mnt/cdrom auto noauto,user" >> /etc/fstab

# I had problems with really slow /dev/random init at boot and blocking at runtime
emerge sys-apps/rng-tools
rc-update add rngd boot

# networking
emerge --noreplace net-misc/netifrc
#eno1 could be eth0
ln -s /etc/init.d/net.lo /etc/init.d/net.eno1
rc-update add /etc/init.d/net.eno1 default

# bootloader
emerge sys-boot/grub:2
grub-install --target=x86_64-efi --efi-directory=/boot --removable
#use this to update grub when new kernels are installed
grub-mkconfig -o /boot/grub/grub.cfg

passwd
